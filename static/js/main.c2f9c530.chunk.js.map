{"version":3,"sources":["components/Maybe/index.js","components/Map/index.js","helpers/index.js","components/Line/index.js","components/Colors/index.js","components/Title/index.js","components/List/index.js","components/AddTask/index.js","components/Filter/index.js","components/ActiveTasks/index.js","containers/TodoList/index.js","App.js","state/todoListStore.js","state/index.js","serviceWorker.js","index.js"],"names":["Maybe","_ref","children","condition","propTypes","PropTypes","node","isRequired","bool","Map","data","_ref$name","name","length","arguments","undefined","Math","random","toString","slice","generateString","childComponents","map","value","index","cloneElement","key","concat","Object","core_browser_esm","components_Maybe","LineBox","styled_base_browser_esm","target","label","styles","lineAnimate","keyframes","_templateObject","LineBar","from","to","Line","_ref2","defaultProps","React","memo","GradTealBlue","Wrap","Title","components_Line","TodoBox","done","_ref3","_ref4","TodoList","_ref5","_ref5$value","onChange","onDelete","list","css","_ref6","es_checkbox","checked","e","tooltip","placement","title","es_button","type","shape","icon","css_browser_esm","float","marginTop","onClick","Search","SearchBox","AddTask","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearch","bind","assertThisInitialized","refs","todoInput","input","focus","ref","placeholder","enterButton","size","allowClear","PureComponent","FilterBox","FilterTodo","es_radio","Group","defaultValue","buttonStyle","Button","ActiveBox","ActiveTasks","TaskList","inject","observer","addNewTask","onChangeTask","onDeleteTask","onChangeFilter","deleteCompletedTasks","todoList","updateTaskStatus","deleteTask","filter","filterTasksBy","react","components_Title","components_AddTask","Filter","components_ActiveTasks","getNumberOfActiveTasks","components_Map","getTaskList","List","empty","Component","Content","Footer","Wrapper","BootCamp","layout","style","minHeight","marginRight","margin","containers_TodoList","textAlign","href","rel","TodoListStore","persist","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","filteredTodo","todos","toJS","observable","computed","action","_this2","task","taskIndex","_this3","_this4","unshift","status","_this5","Boolean","AppStore","state_descriptor","todoListStore","create","hydratedTodoList","appStore","window","location","hostname","match","ReactDOM","render","index_module","stores","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2f9c530.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst Maybe = ({ children, condition }) => (condition ? children : null);\n\nMaybe.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n\tcondition: PropTypes.bool.isRequired,\n};\n\nexport default Maybe;\n","import React, { cloneElement } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Maybe from \"../Maybe\";\nimport { generateString } from \"../../helpers\";\n/**\n * @description The component automatically transmits map callback data to all its sub - component children as prop.\n * @template\n * <Map data={[1,2,3,4]}>\n * \t<DisplayItems/> // Now DisplayItems has 2 prop by default which the value and index prop are adapted from map callback.\n * </Map>\n */\nconst Map = ({ children, data, name = generateString() }) => {\n\tconst childComponents = data.map((value, index) => cloneElement(children, { value, index, key: `$${name}_${index}` }));\n\n\treturn <Maybe condition={data.length !== 0}>{childComponents}</Maybe>;\n};\n\nMap.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n\tdata: PropTypes.array.isRequired,\n};\n\nexport default Map;\n","export const generateString = (length = -1) => {\n\treturn Math.random()\n\t\t.toString(16)\n\t\t.slice(2, length);\n};\n","import React from \"react\";\nimport propTypes from \"prop-types\";\n\nimport styled from \"@emotion/styled\";\nimport { keyframes } from \"@emotion/core\";\n\nconst LineBox = styled.div`\n\theight: 2px;\n\twidth: 100%;\n\toverflow: hidden;\n\twidth: 100%;\n\tmargin: 24px auto 40px;\n`;\n\nconst lineAnimate = keyframes`\n\t0%,\n\t25% {\n\t\ttransform: translateX(-64px);\n\t}\n\t75%,\n\t100% {\n\t\ttransform: translateX(372px);\n\t}\n`;\n\nconst LineBar = styled.div`\n\theight: 100%;\n\twidth: 64px;\n\ttransform: translateX(-64px);\n\tanimation: ${lineAnimate} 3s ease-in-out 1.5s infinite;\n\tbackground: ${({ from, to }) => `linear-gradient(to right, ${from} 0%, ${to} 100%)`};\n`;\n\nconst Line = ({ from, to }) => (\n\t<LineBox>\n\t\t<LineBar from={from} to={to} />\n\t</LineBox>\n);\n\nLine.propTypes = {\n\tfrom: propTypes.string,\n\tto: propTypes.string,\n};\nLine.defaultProps = {\n\tfrom: \"rgba(24, 144, 255, 0)\",\n\tto: \"#1890ff\",\n};\n\nexport default React.memo(Line);\n","import styled from \"@emotion/styled\";\n\nexport const GradBluePurple = styled.p`\n\tdisplay: inline-block;\n\n\tbackground: -webkit-linear-gradient(left, #3f9dec, #a637ca);\n\tbackground: linear-gradient(to right, #3f9dec, #a637ca);\n\n\t-webkit-background-clip: text;\n\t-webkit-text-fill-color: transparent;\n`;\n\nexport const GradPurplePink = styled.p`\n\tdisplay: inline-block;\n\n\tbackground: -webkit-linear-gradient(left, #6758c5, #e072c3);\n\tbackground: linear-gradient(to right, #6758c5, #e072c3);\n\n\t-webkit-background-clip: text;\n\t-webkit-text-fill-color: transparent;\n`;\n\nexport const GradPinkPurple = styled.p`\n\tdisplay: inline-block;\n\n\tbackground: -webkit-linear-gradient(right, #6758c5, #e072c3);\n\tbackground: linear-gradient(to left, #6758c5, #e072c3);\n\n\t-webkit-background-clip: text;\n\t-webkit-text-fill-color: transparent;\n`;\n\nexport const GradPeachPurple = styled.p`\n\tdisplay: inline-block;\n\n\tbackground: -webkit-linear-gradient(left, #f98ea6, #9966d7);\n\tbackground: linear-gradient(to right, #f98ea6, #9966d7);\n\n\t-webkit-background-clip: text;\n\t-webkit-text-fill-color: transparent;\n`;\n\nexport const GradBlueIndigo = styled.p`\n\tdisplay: inline-block;\n\n\tbackground: -webkit-linear-gradient(left, #5fb4e0, #4e4ecf);\n\tbackground: linear-gradient(to right, #5fb4e0, #4e4ecf);\n\n\t-webkit-background-clip: text;\n\t-webkit-text-fill-color: transparent;\n`;\n\nexport const GradIndigo = styled.p`\n\tdisplay: inline-block;\n\n\tbackground: -webkit-linear-gradient(left, #7b7eda, #6c71c0);\n\tbackground: -webkit-linear-gradient(left, #6c71c0, #7b7eda);\n\tbackground: linear-gradient(to right, #6c71c0, #7b7eda);\n\n\t-webkit-background-clip: text;\n\t-webkit-text-fill-color: transparent;\n`;\n\nexport const GradTealBlue = styled.p`\n\tdisplay: inline-block;\n\n\tbackground: -webkit-linear-gradient(left, #00b5c0, #0091d9);\n\tbackground: linear-gradient(to right, #00b5c0, #0091d9);\n\n\t-webkit-background-clip: text;\n\t-webkit-text-fill-color: transparent;\n`;\n\nexport const GradOrangePink = styled.p`\n\tdisplay: inline-block;\n\n\tbackground: -webkit-linear-gradient(left, #fe9ba0, #e072c3);\n\tbackground: linear-gradient(to right, #fe9ba0, #e072c3);\n\n\t-webkit-background-clip: text;\n\t-webkit-text-fill-color: transparent;\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Line from \"../Line\";\nimport { GradTealBlue } from \"../Colors\";\n\nconst Wrap = styled.div`\n\ttext-align: center;\n\tfont-size: 1.3em;\n\twidth: 65%;\n\tmargin: 10px auto;\n\tcolor: #373352;\n\tfont-weight: 300;\n\tmargin-bottom: 30px;\n`;\n\nconst Title = () => {\n\treturn (\n\t\t<Wrap>\n\t\t\t<GradTealBlue>To-do list application</GradTealBlue>\n\t\t\t<Line from=\"#00b5c0\" to=\"#0091d9\" />\n\t\t</Wrap>\n\t);\n};\n\nexport default Title;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\n// ant components\nimport List from \"antd/es/list\";\nimport Button from \"antd/es/button\";\nimport { Tooltip, Checkbox } from \"antd\";\n\nconst TodoBox = styled.div`\n\tbackground: ${({ done }) => (done ? \"#92C65A\" : \"#f5f5f5\")};\n\tpadding: 15px;\n\tborder-radius: 5px;\n\tbox-shadow: 0px 5px 15px rgba(50, 50, 50, 0.1);\n\tborder: 1px solid ${({ done }) => (done ? \"#92c65a\" : \"#cfcfcf\")};\n\n\t& .ant-checkbox-checked {\n\t\t&:before {\n\t\t\tborder-color: #53861d;\n\t\t}\n\n\t\t.ant-checkbox-inner {\n\t\t\tbackground-color: #53861d;\n\t\t\tborder-color: #53861d;\n\t\t}\n\t}\n\n\t& .ant-checkbox-wrapper {\n\t\tuser-select: none;\n\n\t\t& > span:last-of-type {\n\t\t\tmargin-left: 5px;\n\t\t\ttext-decoration: ${({ done }) => (done ? \"line-through\" : \"none\")};\n\t\t\tcolor: ${({ done }) => (done ? \"#FFF\" : \"rgba(0, 0, 0, 0.65)\")};\n\t\t} /* Checkbox label */\n\t} /* checkbox wrapper */\n`;\n\nconst TodoList = ({ value: { value, done }, index, onChange, onDelete }) => {\n\treturn (\n\t\t<List css={{ marginBottom: 15 }}>\n\t\t\t<TodoBox done={done}>\n\t\t\t\t<Checkbox checked={done} onChange={e => onChange({ index, done: e.target.checked })}>\n\t\t\t\t\t{value}\n\t\t\t\t</Checkbox>\n\t\t\t\t<Tooltip placement=\"topLeft\" title=\"Delete task\">\n\t\t\t\t\t<Button type=\"danger\" shape=\"circle\" icon=\"delete\" css={{ float: \"right\", marginTop: -5 }} onClick={() => onDelete(index)} />\n\t\t\t\t</Tooltip>\n\t\t\t</TodoBox>\n\t\t</List>\n\t);\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Input } from \"antd\";\n\nconst Search = Input.Search;\n\nconst SearchBox = styled.div`\n\tmargin-bottom: 10px;\n`;\n\nclass AddTask extends React.PureComponent {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.onSearch = this.onSearch.bind(this);\n\t}\n\n\tonSearch(value) {\n\t\tif(!value) return;\n\t\t\n\t\tthis.props.onChange(value);\n\n\t\tthis.refs.todoInput.input.input.value = \"\";\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.refs.todoInput.focus();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<SearchBox>\n\t\t\t\t<Search ref=\"todoInput\" placeholder=\"Add a new task\" enterButton=\"Add\" size=\"large\" onSearch={this.onSearch} allowClear />\n\t\t\t</SearchBox>\n\t\t);\n\t}\n}\n\nexport default AddTask;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Radio } from \"antd\";\n\nconst FilterBox = styled.div`\n\tmargin-bottom: 40px;\n\tdisplay: inline-block;\n`;\n\nconst FilterTodo = ({ onChange }) => {\n\treturn (\n\t\t<FilterBox>\n\t\t\t<Radio.Group defaultValue=\"all\" buttonStyle=\"solid\" onChange={e => onChange(e.target.value)}>\n\t\t\t\t<Radio.Button value=\"all\">All</Radio.Button>\n\t\t\t\t<Radio.Button value=\"completed\">Completed</Radio.Button>\n\t\t\t\t<Radio.Button value=\"active\">Active</Radio.Button>\n\t\t\t</Radio.Group>\n\t\t</FilterBox>\n\t);\n};\n\nexport default FilterTodo;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst ActiveBox = styled.div`\n\tfloat: right;\n\tmargin-top: 5px;\n`;\n\nconst ActiveTasks = ({ value }) => {\n\treturn <ActiveBox>{value}/Active Tasks</ActiveBox>;\n};\n\nexport default ActiveTasks;\n","import React, { Component, Fragment } from \"react\";\nimport { Empty, Button } from \"antd\";\n// store\nimport { observer, inject } from \"mobx-react\";\n\nimport Maybe from \"../../components/Maybe\";\nimport Map from \"../../components/Map\";\n\nimport Title from \"../../components/Title\";\nimport List from \"../../components/List\";\nimport AddTask from \"../../components/AddTask\";\nimport FilterTodo from \"../../components/Filter\";\nimport ActiveTasks from \"../../components/ActiveTasks\";\n\n@inject(\"todoList\")\n@observer\nclass TaskList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// binding prototypes\n\t\tthis.addNewTask = this.addNewTask.bind(this);\n\t\tthis.onChangeTask = this.onChangeTask.bind(this);\n\t\tthis.onDeleteTask = this.onDeleteTask.bind(this);\n\t\tthis.onChangeFilter = this.onChangeFilter.bind(this);\n\t\tthis.deleteCompletedTasks = this.deleteCompletedTasks.bind(this);\n\t}\n\n\t/**\n\t * Update a task by index and replace the new done value with old value.\n\t * @param {Object} {index, done}\n\t */\n\tonChangeTask({ index, done }) {\n\t\tthis.props.todoList.updateTaskStatus({ index, done });\n\t}\n\n\t/**\n\t * Delete a task by index\n\t * @param {Number} index\n\t */\n\tonDeleteTask(index) {\n\t\tthis.props.todoList.deleteTask(index);\n\t}\n\t/**\n\t * Delete all completed tasks\n\t */\n\tdeleteCompletedTasks() {\n\t\tthis.props.todoList.deleteCompletedTasks();\n\t}\n\t/**\n\t * Change tasks fileter to \"uncompleted\", \"active\" or \"all\"\n\t * @param {String} filter\n\t */\n\tonChangeFilter(filter) {\n\t\tthis.props.todoList.filterTasksBy(filter);\n\t}\n\t/**\n\t * Add a new task from search input box value\n\t * @param {String} value\n\t */\n\taddNewTask(value) {\n\t\tthis.props.todoList.addNewTask(value);\n\t}\n\n\trender() {\n\t\tconst { todoList } = this.props;\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Title />\n\t\t\t\t<AddTask onChange={this.addNewTask} />\n\t\t\t\t<FilterTodo onChange={this.onChangeFilter} />\n\n\t\t\t\t<ActiveTasks value={todoList.getNumberOfActiveTasks} />\n\n\t\t\t\t<Map data={todoList.getTaskList} name=\"todo\">\n\t\t\t\t\t<List onChange={this.onChangeTask} onDelete={this.onDeleteTask} />\n\t\t\t\t</Map>\n\t\t\t\t<Maybe condition={todoList.getTaskList.length === 0}>\n\t\t\t\t\t<Empty />\n\t\t\t\t</Maybe>\n\n\t\t\t\t<Button type=\"danger\" icon=\"delete\" onClick={this.deleteCompletedTasks}>\n\t\t\t\t\tDelete all completed tasks\n\t\t\t\t</Button>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default TaskList;\n","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Layout } from \"antd\";\n\nimport TodoList from \"./containers/TodoList\";\n\nimport \"./scss/app.scss\";\n\nconst { Content, Footer } = Layout;\nconst Wrapper = styled.div`\n\twidth: 560px;\n\t/* min-height: 300px; */\n\tmargin: 50px auto;\n\tbackground-color: #fff;\n\tborder-radius: 25px;\n\tpadding: 20px;\n\tbox-shadow: rgba(50, 50, 50, 0.1) 0px 10px 35px;\n`;\n\nclass BootCamp extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\n\t\t\t\t<Layout style={{ marginRight: 30 }}>\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\n\t\t\t\t\t\t<Wrapper>\n\t\t\t\t\t\t\t<TodoList />\n\t\t\t\t\t\t</Wrapper>\n\t\t\t\t\t</Content>\n\t\t\t\t\t<Footer style={{ textAlign: \"center\" }}>Made with Love by <a href=\"https://github.com/ali-master\" target=\"_new\" rel=\"follow\">Ali Torki</a></Footer>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\nexport default BootCamp;\n","import { observable, computed, action, toJS } from \"mobx\";\nimport { persist } from \"mobx-persist\";\n\nclass TodoListStore {\n\t@persist(\"list\") @observable todos = [\n\t\t{ value: \"Get groceries for dinner\", done: true },\n\t\t{ value: \"Pick up Amit's Birthday present\", done: false },\n\t\t{ value: \"Book flights to Vancouver\", done: false },\n\t\t{ value: \"Finilize presentation\", done: false },\n\t];\n\t@persist(\"list\") @observable filteredTodo = [];\n\n\tconstructor() {\n\t\tthis.filteredTodo = this.todos;\n\t}\n\n\t// Get the latest list of todos\n\t@computed\n\tget getTaskList() {\n\t\treturn toJS(this.filteredTodo);\n\t}\n\t// get length of active todos\n\t@computed\n\tget getNumberOfActiveTasks() {\n\t\treturn toJS(this.filteredTodo.filter(({ done }) => !done)).length;\n\t}\n\t// Update a task which it was done status by index\n\t@action updateTaskStatus = ({ index, done }) => {\n\t\tthis.todos[index].done = done;\n\n\t\tthis.filteredTodo = this.todos;\n\t};\n\t// Delete a task by index\n\t@action deleteTask = index => {\n\t\tthis.todos = this.todos.filter((task, taskIndex) => taskIndex !== index);\n\n\t\tthis.filteredTodo = this.todos;\n\t};\n\t// Delete all completed tasks\n\t@action deleteCompletedTasks = () => {\n\t\tthis.todos = this.todos.filter(({ done }) => !!done);\n\n\t\tthis.filteredTodo = this.todos;\n\t};\n\t// Add a new task into todo list\n\t@action addNewTask = value => {\n\t\tthis.todos.unshift({ value, done: false });\n\n\t\tthis.filteredTodo = this.todos;\n\t};\n\n\t// Filter todo list via by status argv.\n\t@action filterTasksBy = status => {\n\t\tthis.todos = this.todos.filter(({ done }) => {\n\t\t\tswitch (status) {\n\t\t\t\tcase \"completed\":\n\t\t\t\t\treturn Boolean(done);\n\t\t\t\tcase \"active\":\n\t\t\t\t\treturn !Boolean(done);\n\t\t\t\tdefault:\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tthis.filteredTodo = this.todos;\n\t};\n}\n\nexport default TodoListStore;\n","import { observable } from \"mobx\";\nimport { create } from \"mobx-persist\";\n\nimport todoListStore from \"./todoListStore\";\n\n// Compact and organization other stores and main store in one place.\nexport default class AppStore {\n\t@observable serverSide = false;\n\n\tconstructor() {\n\t\tthis.todoListStore = new todoListStore(this);\n\n\t\t// Mobx Persist data [into localStorage by default]\n\t\tconst hydratedTodoList = create();\n\t\thydratedTodoList(\"todoList\", this.todoListStore);\n\t}\n\n\tstores() {\n\t\tconst appStore = this;\n\t\treturn {\n\t\t\tappStore,\n\t\t\ttodoList: this.todoListStore,\n\t\t};\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n// Store and mobx\nimport { Provider } from \"mobx-react\";\nimport AppStore from \"./state\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./scss/index.scss\";\n// create an instance of main app store\nconst appStore = new AppStore();\n\nReactDOM.render(\n\t<Provider {...appStore.stores()}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}